"use strict";
var mongoose = require('mongoose');
var crypto = require('crypto');
var UserSchema = new mongoose.Schema({
    email: { type: String, unique: true, lowercase: true },
    passwordHash: String,
    salt: String,
    name: String,
    tag: String,
    description: String,
    rank: String,
    profilePic: String,
    pillar: String,
    religion: String,
    following: [],
    followers: [],
    posts: []
});
UserSchema.method("setPassword", function (password) {
    var temp = { passwordHash: null, salt: null };
    temp.salt = crypto.randomBytes(16).toString('hex');
    temp.passwordHash = crypto.pbkdf2Sync(password, temp.salt, 1000, 64).toString('hex');
    console.log("this is the hashed password " + temp.passwordHash);
    return temp;
});
UserSchema.method('validatePassword', function (password) {
    var hash = crypto.pbkdf2Sync(password, this.salt, 1000, 64).toString('hex');
    return (hash === this.passwordHash);
});
var User = mongoose.model("User", UserSchema);
module.exports = User;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlck1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidXNlck1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxJQUFJLFFBQVEsR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDbkMsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBRy9CLElBQUksVUFBVSxHQUFPLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FDdEM7SUFDRSxLQUFLLEVBQUUsRUFBQyxJQUFJLEVBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBQztJQUNuRCxZQUFZLEVBQUMsTUFBTTtJQUNuQixJQUFJLEVBQUMsTUFBTTtJQUNYLElBQUksRUFBQyxNQUFNO0lBQ1gsR0FBRyxFQUFDLE1BQU07SUFDVixXQUFXLEVBQUMsTUFBTTtJQUNsQixJQUFJLEVBQUMsTUFBTTtJQUNYLFVBQVUsRUFBQyxNQUFNO0lBQ2pCLE1BQU0sRUFBQyxNQUFNO0lBQ2IsUUFBUSxFQUFDLE1BQU07SUFDZixTQUFTLEVBQUMsRUFBRTtJQUNaLFNBQVMsRUFBQyxFQUFFO0lBQ1osS0FBSyxFQUFDLEVBQUU7Q0FDVCxDQUNGLENBQUE7QUFHRCxVQUFVLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxVQUFDLFFBQVE7SUFDeEMsSUFBSSxJQUFJLEdBQUcsRUFBQyxZQUFZLEVBQUMsSUFBSSxFQUFFLElBQUksRUFBQyxJQUFJLEVBQUMsQ0FBQztJQUMxQyxJQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUMsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFBO0lBQ2xELElBQUksQ0FBQyxZQUFZLEdBQUcsTUFBTSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3JGLE9BQU8sQ0FBQyxHQUFHLENBQUMsaUNBQStCLElBQUksQ0FBQyxZQUFjLENBQUMsQ0FBQTtJQUMvRCxNQUFNLENBQUMsSUFBSSxDQUFDO0FBQ2QsQ0FBQyxDQUFDLENBQUM7QUFHSCxVQUFVLENBQUMsTUFBTSxDQUFDLGtCQUFrQixFQUFFLFVBQVMsUUFBUTtJQUNuRCxJQUFJLElBQUksR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0UsTUFBTSxDQUFDLENBQUMsSUFBSSxLQUFLLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUN6QyxDQUFDLENBQUMsQ0FBQztBQUVILElBQUksSUFBSSxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQzlDLGlCQUFTLElBQUksQ0FBQSJ9